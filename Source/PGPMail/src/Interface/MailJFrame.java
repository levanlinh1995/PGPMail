/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import send.EmailUtility;
import StoreKeyPair.CreateXML;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.channels.FileChannel;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser.ExtensionFilter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import org.xml.sax.SAXException;
import StoreKeyPair.CreateXML;
import java.security.spec.InvalidKeySpecException;
import javax.swing.JPasswordField;
/**
 *
 * @author lelinh
 */
public class MailJFrame extends javax.swing.JFrame {

    
    Interface.SwingEmailSender swe = new Interface.SwingEmailSender();
    /**
     * Creates new form MailJFrame
     */
    public MailJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jRadioButton5 = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        buttonGroup1.add(jRadioButton1);
        buttonGroup1.add(jRadioButton5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jRadioButton1.setText("Encrypt asymmetric and symmetric ");
        jRadioButton1.setActionCommand("Encrypt");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Sign");
        jRadioButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseClicked(evt);
            }
        });

        jButton1.setLabel("Send");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Inbox");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Generate Key");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Import pub/priv key");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Export pub/priv key");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setText("Import pub key");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Export pub key");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sign before encypt", "Sign after encypt", " ", " " }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jRadioButton5.setText("Encrypt symmetric ");

        jMenu1.setText("Setting");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton5)
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 403, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton5))))
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton5)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        jRadioButton1.getAccessibleContext().setAccessibleName("JRadioButton1");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        // TODO add your handling code here:
        //Boolean clicked = true;
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
       // 1: encrypt đoi xung + bat doi xung
       // 2: sign
       // 3: sign after encrypt + encrypt đoi xung + bat doi xung
       // 4: encrypt doi xung
       // 5: sign before encrypt + encrypt đoi xung + bat doi xung
       // 6: sign after encrypt + encrypt đoi xung 
       // 7: sign befor encrypt + encrypt đoi xung 
       
        if (jRadioButton1.isSelected() && !jRadioButton3.isSelected()  )
        {
            
             new SwingEmailSender(1).setVisible(true);
             
             
             
        }
        else if (jRadioButton3.isSelected() && !jRadioButton1.isSelected() &&!jRadioButton5.isSelected()  )
        {
            
             new SwingEmailSender(2).setVisible(true);
             
             
        }
        else if(jRadioButton5.isSelected() && !jRadioButton3.isSelected() )
        {
             new SwingEmailSender(4).setVisible(true);
        }
        else if(jRadioButton1.isSelected() && jRadioButton3.isSelected() && jComboBox1.getSelectedIndex()==1  ) //sign after encrypt  encrypt đoi xung + bat doi xung
        {
            
                new SwingEmailSender(3).setVisible(true);
                
            
        }
        else if(jRadioButton1.isSelected() && jRadioButton3.isSelected() && jComboBox1.getSelectedIndex()== -1 ) // mặc định là sign before encrypt encrypt đoi xung + bat doi xung
        {   
                new SwingEmailSender(5).setVisible(true);
        }
        else if(jRadioButton1.isSelected() && jRadioButton3.isSelected()&&  jComboBox1.getSelectedIndex()==0 )  //sign before encrypt   encrypt đoi xung + bat doi xung
        {
            
                new SwingEmailSender(5).setVisible(true);
        }//////
        else if(jRadioButton5.isSelected() && jRadioButton3.isSelected()&&jComboBox1.getSelectedIndex()==1 ) //sign after encrypt  encrypt đoi xung 
        {
            
                new SwingEmailSender(6).setVisible(true);
        }
        else if(jRadioButton5.isSelected() && jRadioButton3.isSelected() && jComboBox1.getSelectedIndex()== -1 ) // mặc định là sign before encrypt encrypt đoi xung 
        {
            
                new SwingEmailSender(7).setVisible(true);
        }
        else if(jRadioButton5.isSelected() && jRadioButton3.isSelected() && jComboBox1.getSelectedIndex()==0 )  //sign before encrypt   encrypt đoi xung 
        {
           
                 new SwingEmailSender(7).setVisible(true);
        }
        
        else
        {
             new SwingEmailSender(0).setVisible(true);

        }
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
       generateKey panel = new generateKey();
       int result = JOptionPane.showConfirmDialog(this, panel, "", JOptionPane.OK_CANCEL_OPTION);
       if(result == JOptionPane.OK_OPTION)
       {
           JTextField username = panel.getjTextField1();
           String user = username.getText();
           JTextField email = panel.getjTextField2();
           String mail = email.getText();
           JTextField password = panel.getjTextField3();
           String pass = password.getText();
           
           try {
               try {
                   CreateXML.Create(user, mail, pass);
                   JOptionPane jo = new JOptionPane();
                   jo.showMessageDialog(this, "Sucessed!");
               } catch (TransformerConfigurationException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (NoSuchAlgorithmException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (NoSuchProviderException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (IOException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (SAXException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
           } catch (ParserConfigurationException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (TransformerException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
       }
        
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    public static void copyFile( File from, File to ) throws IOException {

    if ( !to.exists() ) { to.createNewFile(); }

    try (
        FileChannel in = new FileInputStream( from ).getChannel();
        FileChannel out = new FileOutputStream( to ).getChannel() ) {

        out.transferFrom( in, 0, in.size() );
    }
  }
    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
         ImportKey panel = new ImportKey();
       int result = JOptionPane.showConfirmDialog(this, panel, "", JOptionPane.OK_CANCEL_OPTION);
       if(result == JOptionPane.OK_OPTION)
       {
           JTextField email = panel.getjTextField1();
           String  mail = email.getText();
           
 
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.addChoosableFileFilter(new FileNameExtensionFilter("Public key (.public)", "public")); 
            chooser.setAcceptAllFileFilterUsed(false);

            
            int returnVal = chooser.showDialog(null, "Import");
            File file = null;
            if(returnVal == JFileChooser.APPROVE_OPTION)     
                file = chooser.getSelectedFile();    
            else
                return;

            //
            File outFile = new File("./src/path/keyStore/"+ mail +".public");
            try {
                copyFile(file, outFile);
                JOptionPane jo = new JOptionPane();
                jo.showMessageDialog(this, "Sucessed!");
            } catch (IOException ex) {
                Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

       }
       
           
        
       
        

    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        try {
            // TODO add your handling code here:
            
            // 1 : decrypt
            //2: verify
            //3: decrypt and verify
            
//         if (jRadioButton2.isSelected())
//        {
//            
//             try {
//                 new InboxJFrame(1).setVisible(true);
//             } catch (IOException ex) {
//                 Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
//             }
//
//             
//        }
//        elses if (jRadioButton4.isSelected())
//        {
//
//             
//             try {
//                 new InboxJFrame(2).setVisible(true);
//             } catch (IOException ex) {
//                 Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
//             }
//             
//        }
//        else if(jRadioButton2.isSelected() && jRadioButton4.isSelected())
//        {
//             try {
//                 new InboxJFrame(3).setVisible(true);
//             } catch (IOException ex) {
//                 Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
//             }
//        }
//        else
//        {
//             try {
new InboxJFrame().setVisible(true);
//             } catch (IOException ex) {
//                 Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
//             }
//
//        }
        } catch (InvalidKeySpecException ex) {
            Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        swe.setupMenu();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
    public static String getExtension(File f) {
        String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 &&  i < s.length() - 1) {
            ext = s.substring(i+1).toLowerCase();
        }
        return ext;
    }
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
         ImportKey panel = new ImportKey();
       int result = JOptionPane.showConfirmDialog(this, panel, "", JOptionPane.OK_CANCEL_OPTION);
       if(result == JOptionPane.OK_OPTION)
       {
           JTextField email = panel.getjTextField1();
           String  mail = email.getText();
           
 
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.addChoosableFileFilter(new FileNameExtensionFilter("Public key (.public)", "public")); 
            chooser.addChoosableFileFilter(new FileNameExtensionFilter("Private key (.private)", "private"));
            chooser.setAcceptAllFileFilterUsed(false);

            int returnVal = chooser.showDialog(null, "Import");
            
            File file = null;
            if(returnVal == JFileChooser.APPROVE_OPTION)     
                file = chooser.getSelectedFile();    
            else
                return;

            //
            // lay duoi mo rong
            String ext = getExtension(file);
           
            File outFile;
            if(ext.equals("public"))
            {
                outFile = new File("./src/path/keyStore/"+ mail +".public");
            }
            else
            {
                outFile = new File("./src/path/keyStore/"+ mail +".private");
            }

            try {
                copyFile(file, outFile);
                JOptionPane jo = new JOptionPane();
                jo.showMessageDialog(this, "Sucessed!");
            } catch (IOException ex) {
                Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

       }
       
        
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
       ExportKey panel = new ExportKey();
       int result = JOptionPane.showConfirmDialog(this, panel, "", JOptionPane.OK_CANCEL_OPTION);
       if(result == JOptionPane.OK_OPTION)
       {
           JTextField user = panel.getjTextField1();
           String  username = user.getText();
           JPasswordField pass = (JPasswordField) panel.getjPasswordField1();
           String  password = pass.getText();
           
   
            // kiem tra xem username , password
           String usr = null;
           String pas = null;
           
           try {
               pas = CreateXML.getValueAttr("password", password, "password");
           } catch (ParserConfigurationException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (SAXException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IOException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           try {
               usr = CreateXML.getValueAttr("username", username, "username");
           } catch (ParserConfigurationException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (SAXException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IOException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
            if( username.equals(usr) && password.equals(pas))
            {
                    JFileChooser chooser = new JFileChooser();
                    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                    chooser.setAcceptAllFileFilterUsed(false);

                    int returnVal = chooser.showDialog(null, "Export");
                    File file = null;
                    String currentDirectory ;
                    if(returnVal == JFileChooser.APPROVE_OPTION)     
                    {
                        file = chooser.getSelectedFile();  
                        currentDirectory = file.getAbsolutePath();
                    }
                    else
                        return;

                   
                    String addrMail = null;
               try {
                   addrMail = CreateXML.getValueAttr("username", username, "address");
               } catch (ParserConfigurationException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (SAXException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (IOException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
                    //lay file ở Storekey
                
                    File FilePubl = new File("./src/path/keyStore/" +addrMail+ "_public.public" );
     
                    File OutFilePub = new File(currentDirectory +"/" +addrMail+ "_public.public" );

               try {
                   copyFile(FilePubl, OutFilePub);
                   JOptionPane jo = new JOptionPane();
                   jo.showMessageDialog(this, "Sucessed!");
               } catch (IOException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               }

            }else
            {
                JOptionPane jo = new JOptionPane();
                jo.showMessageDialog(this, "Username and password incorrec!");
            }
            
            
       }
       
        
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
       ExportKey panel = new ExportKey();
       int result = JOptionPane.showConfirmDialog(this, panel, "", JOptionPane.OK_CANCEL_OPTION);
       if(result == JOptionPane.OK_OPTION)
       {
           JTextField user = panel.getjTextField1();
           String  username = user.getText();
           JPasswordField pass = (JPasswordField) panel.getjPasswordField1();
           String  password = pass.getText();
           
   
            // kiem tra xem username , password
           String usr = null;
           String pas = null;
           
           try {
               pas = CreateXML.getValueAttr("password", password, "password");
           } catch (ParserConfigurationException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (SAXException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IOException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           try {
               usr = CreateXML.getValueAttr("username", username, "username");
           } catch (ParserConfigurationException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (SAXException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IOException ex) {
               Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
            if( username.equals(usr) && password.equals(pas))
            {
                    JFileChooser chooser = new JFileChooser();
                    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                    chooser.setAcceptAllFileFilterUsed(false);

                    int returnVal = chooser.showDialog(null, "Export");
                    File file = null;
                    String currentDirectory ;
                    if(returnVal == JFileChooser.APPROVE_OPTION)     
                    {
                        file = chooser.getSelectedFile();  
                        currentDirectory = file.getAbsolutePath();
                    }
                    else
                        return;

                   
                    String addrMail = null;
               try {
                   addrMail = CreateXML.getValueAttr("username", username, "address");
               } catch (ParserConfigurationException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (SAXException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               } catch (IOException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
                    //lay file ở Storekey
                    File FilePriv = new File("./src/path/keyStore/" +addrMail+ "_private.private" );
                    File FilePubl = new File("./src/path/keyStore/" +addrMail+ "_public.public" );
                    // lay thu muc hien hanh
                    
                    System.out.println(currentDirectory);
                    //
                    File OutFilePriv = new File(currentDirectory +"/" +addrMail+ "_private.private" );
                    File OutFilePub = new File(currentDirectory +"/" +addrMail+ "_public.public" );
                    
                    
               try {
                   // lưu vào đường dẫn
                   copyFile(FilePriv, OutFilePriv);
                   
               } catch (IOException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
               try {
                   copyFile(FilePubl, OutFilePub);
                   JOptionPane jo = new JOptionPane();
                   jo.showMessageDialog(this, "Sucessed!");
               } catch (IOException ex) {
                   Logger.getLogger(MailJFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
;
                   

                    
                        
                    

            }else
            {
                JOptionPane jo = new JOptionPane();
                jo.showMessageDialog(this, "Username and password incorrec!");
            }
            
            
       }
       
        
        
    }//GEN-LAST:event_jButton5MouseClicked

    private void jRadioButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseClicked
        // TODO add your handling code here:
        
        //sign
    }//GEN-LAST:event_jRadioButton3MouseClicked

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MailJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton5;
    // End of variables declaration//GEN-END:variables
}
